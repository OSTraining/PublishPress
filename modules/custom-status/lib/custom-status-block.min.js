/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./modules/custom-status/lib/custom-status-block.jsx");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./modules/custom-status/lib/custom-status-block.jsx":
/*!***********************************************************!*\
  !*** ./modules/custom-status/lib/custom-status-block.jsx ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("/**\n * ------------------------------------------------------------------------------\n * Based on Edit Flow\n * Author: Daniel Bachhuber, Scott Bressler, Mohammad Jangda, Automattic, and\n * others\n * Copyright (c) 2009-2019 Mohammad Jangda, Daniel Bachhuber, et al.\n * ------------------------------------------------------------------------------\n */\nvar __ = wp.i18n.__;\nvar PluginPostStatusInfo = wp.editPost.PluginPostStatusInfo;\nvar registerPlugin = wp.plugins.registerPlugin;\nvar _wp$data = wp.data,\n    withSelect = _wp$data.withSelect,\n    withDispatch = _wp$data.withDispatch,\n    subscribe = _wp$data.subscribe;\nvar compose = wp.compose.compose;\nvar SelectControl = wp.components.SelectControl;\nvar publishedStatuses = ['publish', 'future', 'private'];\n/**\n * Map Custom Statuses as options for SelectControl\n */\n\nvar getStatusLabel = function getStatusLabel(slug) {\n  var item = window.PPCustomStatuses.find(function (s) {\n    return s.slug === slug;\n  });\n\n  if (item) {\n    return item.name;\n  }\n\n  var draft = window.PPCustomStatuses.find(function (s) {\n    return s.slug === 'draft';\n  });\n  return draft.name;\n}; // Remove the Published statuses and Pending Review from the list.\n\n\nvar getStatuses = function getStatuses() {\n  var statuses = window.PPCustomStatuses.map(function (s) {\n    return {\n      label: s.name,\n      value: s.slug\n    };\n  });\n  statuses = statuses.filter(function (item) {\n    return !publishedStatuses.includes(item.value) && 'pending' != item.value;\n  });\n  return statuses;\n};\n/**\n * Hack :(\n *\n * @see https://github.com/WordPress/gutenberg/issues/3144\n *\n * @param status\n */\n\n\nvar updateTheSaveAsButtonText = function updateTheSaveAsButtonText(status) {\n  setTimeout(function () {\n    var node = document.querySelector('.editor-post-save-draft, .editor-post-switch-to-draft');\n\n    if (!node) {\n      return;\n    }\n\n    var label;\n    var currentStatus = wp.data.select('core/editor').getCurrentPost().status;\n\n    if (publishedStatuses.includes(currentStatus)) {\n      if ('future' === currentStatus) {\n        label = __('Unschedule and Save as %s', 'publishpress').replace('%s', getStatusLabel('draft'));\n      } else {\n        label = __('Unpublish and Save as %s', 'publishpress').replace('%s', getStatusLabel('draft'));\n      }\n    } else {\n      label = __('Save as %s', 'publishpress').replace('%s', getStatusLabel(status));\n    }\n\n    if (label !== node.innerText) {\n      node.innerText = label;\n    }\n  }, 100);\n};\n/**\n * Hack :(\n * We need an interval because the DOM element is removed by autosave and rendered back after finishing.\n *\n * @see\n */\n\n\nvar lastStatus = wp.data.select('core/editor').getCurrentPost().status;\nsetInterval(function () {\n  var currentStatus = wp.data.select('core/editor').getCurrentPost().status;\n  var editedStatus = wp.data.select('core/editor').getEditedPostAttribute('status');\n  updateTheSaveAsButtonText(editedStatus);\n\n  if (lastStatus !== editedStatus) {\n    // Force to render after a post status change\n    wp.data.dispatch('core/editor').editPost({\n      status: '!'\n    });\n    wp.data.dispatch('core/editor').editPost({\n      status: editedStatus\n    });\n    lastStatus = editedStatus;\n  }\n}, 100);\n/**\n * Custom status component\n * @param object props\n */\n\nvar PPCustomPostStatusInfo = function PPCustomPostStatusInfo(_ref) {\n  var onUpdate = _ref.onUpdate,\n      status = _ref.status;\n  var statusControl;\n  var originalStatus = wp.data.select('core/editor').getCurrentPost().status;\n  var noteElement;\n\n  if ([originalStatus, status].includes('publish')) {\n    statusControl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"publishpress-static-post-status\"\n    }, __('Published', 'publishpress'));\n    noteElement = /*#__PURE__*/React.createElement(\"small\", {\n      className: \"publishpress-extended-post-status-note\"\n    }, __('To select a custom status, please unpublish the content first.', 'publishpress'));\n  } else if ([originalStatus, status].includes('future')) {\n    statusControl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"publishpress-static-post-status\"\n    }, __('Scheduled', 'publishpress'));\n    noteElement = /*#__PURE__*/React.createElement(\"small\", {\n      className: \"publishpress-extended-post-status-note\"\n    }, __('To select a custom status, please unschedule the content first.', 'publishpress'));\n  } else if ('pending' === status) {\n    statusControl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"publishpress-static-post-status\"\n    }, __('Pending review', 'publishpress'));\n    noteElement = /*#__PURE__*/React.createElement(\"small\", {\n      className: \"publishpress-extended-post-status-note\"\n    }, __('To select a custom status, please uncheck the \"Pending Review\" checkbox first.', 'publishpress'));\n  } else if ([originalStatus, status].includes('private')) {\n    statusControl = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"publishpress-static-post-status\"\n    }, __('Privately Published', 'publishpress'));\n    noteElement = /*#__PURE__*/React.createElement(\"small\", {\n      className: \"publishpress-extended-post-status-note\"\n    }, __('To select a custom status, please unpublish the content first.', 'publishpress'));\n  } else {\n    statusControl = /*#__PURE__*/React.createElement(SelectControl, {\n      label: \"\",\n      value: status,\n      options: getStatuses(),\n      onChange: onUpdate\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(PluginPostStatusInfo, {\n    className: \"publishpress-extended-post-status publishpress-extended-post-status-\".concat(status)\n  }, /*#__PURE__*/React.createElement(\"h4\", null, __('Post Status', 'publishpress')), statusControl, noteElement);\n};\n\nvar getCurrentPostStatus = function getCurrentPostStatus() {\n  var currentPostStatus = wp.data.select('core/editor').getEditedPostAttribute('status');\n\n  if (currentPostStatus === 'auto-draft') {\n    currentPostStatus = 'draft';\n  }\n\n  return currentPostStatus;\n};\n\nvar plugin = compose(withSelect(function (select) {\n  return {\n    status: getCurrentPostStatus()\n  };\n}), withDispatch(function (dispatch) {\n  return {\n    onUpdate: function onUpdate(status) {\n      wp.data.dispatch('core/editor').editPost({\n        status: status\n      });\n      updateTheSaveAsButtonText(status);\n    }\n  };\n}))(PPCustomPostStatusInfo);\nregisterPlugin('publishpress-custom-status-block', {\n  icon: 'admin-site',\n  render: plugin\n});\n\n//# sourceURL=webpack:///./modules/custom-status/lib/custom-status-block.jsx?");

/***/ })

/******/ });